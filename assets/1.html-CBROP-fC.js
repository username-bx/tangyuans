import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as e,o as n}from"./app-CQzc66V1.js";const l={};function t(h,s){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="java-编译后无法执行-class-文件的问题" tabindex="-1"><a class="header-anchor" href="#java-编译后无法执行-class-文件的问题"><span>Java 编译后无法执行 <code>.class</code> 文件的问题</span></a></h1><h2 id="❓-问题描述" tabindex="-1"><a class="header-anchor" href="#❓-问题描述"><span>❓ 问题描述</span></a></h2><p>使用 <code>javac</code> 编译 Java 文件后，出现 <code>.class</code> 文件，但执行时报错：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">javac</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Main.java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Main.class</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # ❌ 错误的写法</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="✅-正确的执行方式" tabindex="-1"><a class="header-anchor" href="#✅-正确的执行方式"><span>✅ 正确的执行方式</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">javac</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Main.java</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 编译，生成 Main.class</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Main</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 正确：只写类名，不加 .class 后缀</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📌-原因解析" tabindex="-1"><a class="header-anchor" href="#📌-原因解析"><span>📌 原因解析</span></a></h2><ul><li><p>javac 编译器会将 Main.java 编译成字节码文件 Main.class。</p></li><li><p>java 命令运行的是 类名（即 .class 文件中的类），而不是文件名。</p></li><li><p>所以不要加 .class 后缀，只需要写类名。</p></li></ul><h2 id="⚠️-注意事项" tabindex="-1"><a class="header-anchor" href="#⚠️-注意事项"><span>⚠️ 注意事项</span></a></h2><ul><li><p>✅ 类名和文件名必须完全一致（大小写敏感）；</p></li><li><p>✅ java 命令只能用类名，不能加 .class 后缀；</p></li><li><p>✅ 保证 main() 方法是 public static void main(String[] args)；</p></li><li><p>✅ 如果定义了 package，运行方式会稍有不同（见下方）；</p></li></ul><h2 id="📦-使用-package-时的正确运行方式" tabindex="-1"><a class="header-anchor" href="#📦-使用-package-时的正确运行方式"><span>📦 使用 package 时的正确运行方式</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> myapp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello from package!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">javac</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> myapp/Main.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成" tabindex="-1"><a class="header-anchor" href="#生成"><span>生成：</span></a></h3><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">myapp</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">class</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行-在-src-目录下" tabindex="-1"><a class="header-anchor" href="#运行-在-src-目录下"><span>运行（在 src 目录下）：</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> myapp.Main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="✅-总结" tabindex="-1"><a class="header-anchor" href="#✅-总结"><span>✅ 总结</span></a></h2><table><thead><tr><th>操作</th><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>编译</td><td><code>javac Main.java</code></td><td>生成 <code>Main.class</code></td></tr><tr><td>运行（无包）</td><td><code>java Main</code></td><td>类名，不加 <code>.class</code></td></tr><tr><td>运行（有包）</td><td><code>java 包名.类名</code>（如 <code>java myapp.Main</code>）</td><td>包结构对应类路径</td></tr></tbody></table>`,20)]))}const r=a(l,[["render",t]]),k=JSON.parse('{"path":"/java/1.html","title":"Java 编译后无法执行 .class 文件的问题","lang":"zh-CN","frontmatter":{"description":"Java 编译后无法执行 .class 文件的问题 ❓ 问题描述 使用 javac 编译 Java 文件后，出现 .class 文件，但执行时报错： ✅ 正确的执行方式 📌 原因解析 javac 编译器会将 Main.java 编译成字节码文件 Main.class。 java 命令运行的是 类名（即 .class 文件中的类），而不是文件名。 所以...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 编译后无法执行 .class 文件的问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T02:43:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tang Yuan\\",\\"url\\":\\"\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/1.html"}],["meta",{"property":"og:site_name","content":"汤圆"}],["meta",{"property":"og:title","content":"Java 编译后无法执行 .class 文件的问题"}],["meta",{"property":"og:description","content":"Java 编译后无法执行 .class 文件的问题 ❓ 问题描述 使用 javac 编译 Java 文件后，出现 .class 文件，但执行时报错： ✅ 正确的执行方式 📌 原因解析 javac 编译器会将 Main.java 编译成字节码文件 Main.class。 java 命令运行的是 类名（即 .class 文件中的类），而不是文件名。 所以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-18T02:43:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T02:43:30.000Z"}]]},"git":{"createdTime":1750214610000,"updatedTime":1750214610000,"contributors":[{"name":"Benjamin","username":"Benjamin","email":"benjaminma@example.com","commits":1,"url":"https://github.com/Benjamin"}]},"readingTime":{"minutes":0.97,"words":292},"filePathRelative":"java/1.md","excerpt":"\\n<h2>❓ 问题描述</h2>\\n<p>使用 <code>javac</code> 编译 Java 文件后，出现 <code>.class</code> 文件，但执行时报错：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-bash\\"><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">javac</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Main.java</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">java</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Main.class</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  # ❌ 错误的写法</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,k as data};
