import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as t,o as s}from"./app-ClPFSXWu.js";const n={};function l(o,i){return s(),a("div",null,i[0]||(i[0]=[t(`<h1 id="nginx-反向代理" tabindex="-1"><a class="header-anchor" href="#nginx-反向代理"><span>nginx 反向代理</span></a></h1><ol><li>情况说明</li></ol><p>当用户访问你的网站并发出请求时，如果请求地址中使用的是 localhost，这个 localhost 是相对于发出请求的机器</p><ul><li>用户在浏览器中访问你的网站，例如 <a href="https://example.com" target="_blank" rel="noopener noreferrer">https://example.com</a>。</li><li>然后网页中通过 JavaScript 发起了一个请求，例如 fetch(&quot;<a href="http://localhost:3000/api" target="_blank" rel="noopener noreferrer">http://localhost:3000/api</a>&quot;)。</li></ul><ol start="2"><li>结果分析：</li></ol><p>这个 <a href="http://localhost:3000/api" target="_blank" rel="noopener noreferrer">http://localhost:3000/api</a> 会尝试访问 用户本地机器 的 localhost（即：127.0.0.1:3000），不是你的服务器的 localhost。</p><ol start="3"><li>如果你希望请求打到服务器再由 Nginx 转发，应该这样做：</li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 相对路径，会发送到 example.com，由 nginx 代理转发到 localhost:4000</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 这个 /api 是一个 相对路径，意思是它不会指定域名或协议，而是：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// “请求当前网页所处域名下的 /api 路径。”</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fetch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/api&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你的 Nginx 里配置：</p><div class="language-nginx line-numbers-mode" data-highlighter="shiki" data-ext="nginx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-nginx"><span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /api {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    proxy_pass </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">http://localhost:4000;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>目标场景</li></ol><p>你的网站通过 Nginx 反向代理，前端代码中使用 相对路径（如 fetch(&quot;/api/xxx&quot;)、fetch(&quot;/auth/xxx&quot;)）来请求不同的后端服务。</p>`,12)]))}const h=e(n,[["render",l]]),c=JSON.parse('{"path":"/software/36.nginx-proxy_pass.html","title":"nginx 反向代理","lang":"zh-CN","frontmatter":{"title":"nginx 反向代理","shortTitle":"proxy_pass nginx","icon":"pen-to-square","date":"2025-06-26T00:00:00.000Z","order":36,"tag":["proxy_pass nginx"],"auther":"Tang Yuan","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nginx 反向代理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-26T02:20:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tang Yuan\\",\\"url\\":\\"\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/software/36.nginx-proxy_pass.html"}],["meta",{"property":"og:site_name","content":"汤圆"}],["meta",{"property":"og:title","content":"nginx 反向代理"}],["meta",{"property":"og:description","content":"nginx 反向代理 情况说明 当用户访问你的网站并发出请求时，如果请求地址中使用的是 localhost，这个 localhost 是相对于发出请求的机器 用户在浏览器中访问你的网站，例如 https://example.com。 然后网页中通过 JavaScript 发起了一个请求，例如 fetch(\\"http://localhost:3000/a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-26T02:20:51.000Z"}],["meta",{"property":"article:tag","content":"proxy_pass nginx"}],["meta",{"property":"article:published_time","content":"2025-06-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-26T02:20:51.000Z"}],["meta",{"name":"keywords","content":"proxy_pass nginx"}]],"description":"nginx 反向代理 情况说明 当用户访问你的网站并发出请求时，如果请求地址中使用的是 localhost，这个 localhost 是相对于发出请求的机器 用户在浏览器中访问你的网站，例如 https://example.com。 然后网页中通过 JavaScript 发起了一个请求，例如 fetch(\\"http://localhost:3000/a..."},"git":{"createdTime":1750904451000,"updatedTime":1750904451000,"contributors":[{"name":"Benjamin","username":"Benjamin","email":"benjaminma@example.com","commits":1,"url":"https://github.com/Benjamin"}]},"readingTime":{"minutes":1,"words":300},"filePathRelative":"software/36.nginx-proxy_pass.md","excerpt":"\\n<ol>\\n<li>情况说明</li>\\n</ol>\\n<p>当用户访问你的网站并发出请求时，如果请求地址中使用的是 localhost，这个 localhost 是相对于发出请求的机器</p>\\n<ul>\\n<li>用户在浏览器中访问你的网站，例如 <a href=\\"https://example.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://example.com</a>。</li>\\n<li>然后网页中通过 JavaScript 发起了一个请求，例如 fetch(\\"<a href=\\"http://localhost:3000/api\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://localhost:3000/api</a>\\")。</li>\\n</ul>","autoDesc":true}');export{h as comp,c as data};
