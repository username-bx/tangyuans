import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as a}from"./app-ClPFSXWu.js";const r={};function o(l,e){return a(),i("div",null,e[0]||(e[0]=[n('<h1 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h1><h2 id="rn介绍" tabindex="-1"><a class="header-anchor" href="#rn介绍"><span>rn介绍</span></a></h2><ol><li>react-native 相关介绍</li></ol><p>移动端:<br> 1. web app 和pc web没有什么区别<br> 2. native android (java kotlin) IOS (Objective-C swift) 原生<br> 3. hybridApp 混合开发 通过一个native container(WebView)展示H5页面 利用webApp在native组件中展示</p><p>rn:<br> 真正的移动端<br> 打包时,把rn的组件映射为android或者IOS的组件</p><p>rn环境搭建</p><ol><li><p>沙盒环境<br> // 安装cli<br> npm install -g expo-cli<br> // 测试是否安装完成<br> expo -V<br> // 创建新项目<br> expo init xxx<br> // 启动项目<br> npm run start</p></li><li><p>原生环境</p><ol><li>检查node版本 version&gt;18</li><li>下载jdk17</li><li>下载android studio <ol><li>Android SDK Android SDK Platform 33 Intel x86 Atom_64 System Image Android SDK Platform 34 Intel x86 Atom_64 System Image</li><li>Android SDK Platform</li><li>Android Virtual Device</li><li>设置环境变量到系统变量 <ol><li><p>path</p><p>%ANDROID_HOME%\\platform-tools<br> %ANDROID_HOME%\\emulator<br> %ANDROID_HOME%\\tools<br> %ANDROID_HOME%\\tools\\bin</p></li><li><p>系统变量<br> ANDROID_HOME C:\\Users\\你的用户名\\AppData\\Local\\Android\\Sdk</p></li></ol></li></ol></li></ol></li><li><p>创建应用</p><ol><li><p>使用cli</p><ol><li>清除之前的cli:npm uninstall -g react-native-cli @react-native-community/cli</li><li>安装最新的cli:npm i -g react-native-cli @react-native-community/cli</li><li>测试版本: react-native -v</li></ol></li><li><p>创建项目<br> react-native init xxx</p></li><li><p>启动应用<br> npm run start</p></li></ol></li></ol>',7)]))}const d=t(r,[["render",o]]),m=JSON.parse('{"path":"/reactNative/env.html","title":"环境搭建","lang":"zh-CN","frontmatter":{"icon":"file-code","date":"2024-05-21T00:00:00.000Z","order":1,"tag":["React Native"],"description":"环境搭建 rn介绍 react-native 相关介绍 移动端: 1. web app 和pc web没有什么区别 2. native android (java kotlin) IOS (Objective-C swift) 原生 3. hybridApp 混合开发 通过一个native container(WebView)展示H5页面 利用webA...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"环境搭建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-21T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-23T09:09:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Tang Yuan\\",\\"url\\":\\"\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/reactNative/env.html"}],["meta",{"property":"og:site_name","content":"汤圆"}],["meta",{"property":"og:title","content":"环境搭建"}],["meta",{"property":"og:description","content":"环境搭建 rn介绍 react-native 相关介绍 移动端: 1. web app 和pc web没有什么区别 2. native android (java kotlin) IOS (Objective-C swift) 原生 3. hybridApp 混合开发 通过一个native container(WebView)展示H5页面 利用webA..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-23T09:09:53.000Z"}],["meta",{"property":"article:tag","content":"React Native"}],["meta",{"property":"article:published_time","content":"2024-05-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-23T09:09:53.000Z"}]]},"git":{"createdTime":1737623393000,"updatedTime":1737623393000,"contributors":[{"name":"benjamin","username":"benjamin","email":"benjamin@manka.co.jp","commits":1,"url":"https://github.com/benjamin"}]},"readingTime":{"minutes":1.03,"words":310},"filePathRelative":"reactNative/env.md","excerpt":"\\n<h2>rn介绍</h2>\\n<ol>\\n<li>react-native 相关介绍</li>\\n</ol>\\n<p>移动端:<br>\\n1. web app 和pc web没有什么区别<br>\\n2. native android (java kotlin) IOS (Objective-C swift) 原生<br>\\n3. hybridApp 混合开发 通过一个native container(WebView)展示H5页面 利用webApp在native组件中展示</p>\\n<p>rn:<br>\\n真正的移动端<br>\\n打包时,把rn的组件映射为android或者IOS的组件</p>\\n<p>rn环境搭建</p>","autoDesc":true}');export{d as comp,m as data};
